#!/usr/bin/env bash

#####~~~~~ reusable generic components ~~~~~#####

## capture starting working directory and script directory
DIR_START=$(pwd)
DIR_SCRIPT=$(cd "$(dirname "${0}")"; pwd)


#####~~~~~ project specific components ~~~~~#####

## project scripts stored in <project-root>/bin
## change working directory to project root
cd ${DIR_SCRIPT}/..
DIR_ROOT=$(pwd)


#####~~~~~ script specific components ~~~~~#####

## capture start time
echo "Script started at: "$(date)

## source server-playbook config file
source etc/server-playbook.conf

## install Ubuntu packages
apt-get -y update
apt-get -y upgrade
apt-get -y autoremove
apt-get -y clean
for p in $(cat etc/packages_Ubuntu)
do
    apt-get -y install $(echo "${p}")
done
apt-get -y update
apt-get -y upgrade
apt-get -y autoremove
apt-get -y clean

## install R packages
R CMD javareconf
bin/package-install.R etc/packages_R "${R_SHARED_LIB}" "${R_CRAN_MIRROR}"
bin/package-verify.R etc/packages_R "${R_SHARED_LIB}"
R CMD javareconf

## install rstudio server
wget "${R_RSTUDIO_URL}"
gdebi --n $(basename "${R_RSTUDIO_URL}")
firewall-cmd --permanent --zone=public --add-port=8787/tcp
firewall-cmd --reload
rm $(basename "${R_RSTUDIO_URL}")

## install shiny server
wget "${R_SHINY_URL}"
gdebi --n $(basename "${R_SHINY_URL}")
firewall-cmd --permanent --zone=public --add-port=3838/tcp
firewall-cmd --reload
rm $(basename "${R_SHINY_URL}")

## capture finish time
echo "Script finished at: "$(date)
